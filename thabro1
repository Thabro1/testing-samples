local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local RunService = game:GetService("RunService")

local function clamp(n, min, max)
	return math.clamp(n, min, max)
end

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SpeedSliderGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 100)
Frame.Position = UDim2.new(0, 100, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 25)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Player Speed Control"
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 20
Title.TextColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Parent = Frame

local SliderBack = Instance.new("Frame")
SliderBack.Size = UDim2.new(1, -20, 0, 10)
SliderBack.Position = UDim2.new(0, 10, 0, 40)
SliderBack.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
SliderBack.BorderSizePixel = 0
SliderBack.Parent = Frame

local Slider = Instance.new("Frame")
Slider.Size = UDim2.new(0, 10, 0, 20)
Slider.Position = UDim2.new(0, 0, 0, -5)
Slider.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
Slider.BorderSizePixel = 0
Slider.Parent = SliderBack

local ValueLabel = Instance.new("TextLabel")
ValueLabel.Size = UDim2.new(1, 0, 0, 25)
ValueLabel.Position = UDim2.new(0, 0, 1, -5)
ValueLabel.Text = "Speed: 100"
ValueLabel.Font = Enum.Font.SourceSans
ValueLabel.TextSize = 18
ValueLabel.TextColor3 = Color3.new(1, 1, 1)
ValueLabel.BackgroundTransparency = 1
ValueLabel.Parent = Frame

-- Slider Logic
local dragging = false
local minSpeed = 100
local maxSpeed = 1000
local currentSpeed = 100

local function updateSlider(posX)
	local sliderWidth = SliderBack.AbsoluteSize.X
	local offset = clamp(posX - SliderBack.AbsolutePosition.X, 0, sliderWidth)
	local percent = offset / sliderWidth
	local newSpeed = math.floor(clamp(minSpeed + (maxSpeed - minSpeed) * percent, minSpeed, maxSpeed))
	currentSpeed = newSpeed
	Slider.Position = UDim2.new(0, offset, 0, -5)
	ValueLabel.Text = "Speed: " .. tostring(newSpeed)

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = currentSpeed
	end
end

Slider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
	end
end)

SliderBack.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		updateSlider(input.Position.X)
	end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateSlider(input.Position.X)
	end
end)

-- Apply speed on respawn
LocalPlayer.CharacterAdded:Connect(function(char)
	local hum = char:WaitForChild("Humanoid")
	hum.WalkSpeed = currentSpeed
end)
